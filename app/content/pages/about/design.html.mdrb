---
title: Site Design
layout: article
---

## Layout

The design leans heavily into CSS grid. I’m a relatively new student of CSS grid so I’m sure the approach could be improved. I built a 12 column layout from using https://utopia.fyi to generate based grid, layout, and type settings as CSS variables.

## Colors

Speaking of, the color theme of the site is also driven by CSS variables. Taking a cue from Tailwind’s default color palettes, I liked the idea of building the color theme off a monochromatic scale. This led me to [`chroma-js` ](https://www.npmjs.com/package/chroma-js) which can generate a scale given seed colors. Joy of Rails can now swap out its color theme given a recognized color name. It’s currently hard-coded but a future release will allow readers to swap out the color themselves.

## UI Frameworks?

I‘m not directly using a UI framework. The first iteration of this site’s design was built with Tailwind which has now been removed. I have copied over a number of Tailwind utility classes I used in that first iteration as well as the generated Utopia CSS variables for layout, spacing, and typography. I want to Joy of Rails to "own more" of its dependencies—part of why I implemented [Authentication from Scratch](https://github.com/joyofrails/joyofrails.com/pull/149). I love Tailwind, but in moving in this direction, it felt freeing to realize I [don’t need a CSS framework](https://www.smashingmagazine.com/2022/05/you-dont-need-ui-framework/). This does mean a more work is required in HTML and CSS to make styles and accessibility work better for readers.
