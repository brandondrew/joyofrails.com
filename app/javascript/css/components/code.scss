@import '../config/variables.scss';

.code-wrapper {
  --code-line-height: 1.7777778;

  border-radius: var(--space-3xs-2xs);
  border: 1px solid var(--joy-border-quiet);
}

@media screen and (min-width: $screen-md) {
  .article-content {
    & .code-wrapper {
      margin-inline-start: calc(var(--space-m) * -1);
      margin-inline-end: calc(var(--space-m) * -1);
    }
  }
}

.code-body {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  overflow-x: auto;
  position: relative;

  & pre {
    border-radius: 0.5rem;
    padding-top: var(--space-m);
    padding-inline-end: var(--space-m);
    padding-bottom: var(--space-m);
    padding-inline-start: var(--space-m);
  }

  & pre,
  & textarea {
    background-color: inherit;
    line-height: var(--code-line-height);
    margin-top: 0;
    margin-bottom: 0;
  }

  /* https://chriscoyier.net/2023/09/29/css-solves-auto-expanding-textareas-probably-eventually/ */

  & textarea {
    font-family: var(--monospace);
    border: none;
    color: white;
    resize: none;
    padding: 0;
  }
}

.code-header {
  line-height: 1;
  display: none;
  padding: 1.5rem 1.5rem 0.5rem;
  font-size: 0.875rem;
  line-height: 1.5715;
  /* color: rgb(156 163 175 / var(--tw-text-opacity)); */

  & .code-title {
    font-weight: 600;
    display: block;
    text-align: center;
    line-height: 1;

    & a {
      font-family: var(--sans-serif);
      gap: 0.25rem;
      align-items: baseline;
      display: flex;
      font-weight: bold;
      text-decoration: none;
      & svg {
        // fill: var(--joy-light);
      }
    }

    & a svg.icon {
      width: 0.75rem;
      height: 0.75rem;
    }
  }

  svg {
    fill: currentColor;
    color: currentColor;

    &.app-dots {
      display: inline-block;
      vertical-align: top;
    }

    &.copy-text {
      /* width: 24px; */
    }
    &.check-mark {
      /* width: 24px; */
    }
  }
}
@media (min-width: $screen-lg) {
  .code-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
}

.code-footer {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  padding-bottom: 1.5rem;
}

.code-output {
  /* color: rgb(156 163 175 / var(--tw-text-opacity)); */
}

.code-output,
.code-result {
  padding: 0 !important; /* Override tailwind padding */
}

.code-actions {
  flex-direction: row-reverse;
  /* color: rgb(156 163 175 / var(--tw-text-opacity)); */
}

@media (min-width: 1024px) {
  .code-actions {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
}

.code-action-status {
  font-size: 0.875rem;
  line-height: 1.5715;
}

.clipboard-copy-container {
  font-family: var(--sans-serif);
}

.code-examples--list {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-xs);
  margin-top: var(--space-xs);
  justify-content: start;

  h3 {
    margin-bottom: var(--space-xs);
  }

  & > * {
    max-width: 100%;
    margin-bottom: var(--grid-gutter);
  }

  & .code-wrapper {
    margin-inline-start: 0;
    margin-inline-end: 0;
  }
}

@media screen and (min-width: $screen-md) {
  .code-examples--list {
    & > * {
      width: 45%;
    }
  }
}

.snippet {
  width: fit-content;
  max-width: var(--grid-max-width);

  & .code-body {
    flex-direction: column;
  }

  & .code-editor {
    padding-top: var(--space-m);
    padding-inline-end: var(--space-m);
    padding-bottom: var(--space-m);
    padding-inline-start: var(--space-m);
  }
}

.grid-stack {
  display: grid;

  & > * {
    grid-area: 1 / 1 / 2 / 2;
  }
}

/*
  .autogrow-wrapper taken from
  https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/
*/
.autogrow-wrapper {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
}

.autogrow-wrapper::after {
  /* Note the weird space! Needed to preventy jumpy behavior */
  content: attr(data-replicated-value) ' ';

  /* Hidden from view, clicks, and screen readers */
  visibility: hidden;

  line-height: var(--code-line-height);
  font-family: var(--monospace);
  font-size: var(--step--1);
}

.autogrow-wrapper > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  resize: none;

  /* Firefox shows scrollbar on growth, you can hide like this. */
  overflow: hidden;
}

.autogrow-wrapper > textarea,
.autogrow-wrapper::after {
  /* Place on top of each other */
  grid-area: 1 / 1 / 2 / 2;

  white-space: pre-wrap;
  word-wrap: break-word;
  max-width: var(--grid-max-width);
}
